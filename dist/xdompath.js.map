{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@telenko/string-stream/index.js","webpack:///./node_modules/@telenko/string-stream/src/StringStream.js","webpack:///./src/Compiler/Compiler.js","webpack:///./src/Compiler/PerformerStore.js","webpack:///./src/Compiler/decorator/axis.js","webpack:///./src/Compiler/decorator/compile.js","webpack:///./src/Compiler/decorator/func.js","webpack:///./src/Compiler/decorator/prioritizedOperator.js","webpack:///./src/Compiler/performer/Axis/Axis.js","webpack:///./src/Compiler/performer/Axis/RootNode.js","webpack:///./src/Compiler/performer/Axis/containers/Axes.js","webpack:///./src/Compiler/performer/Axis/index.js","webpack:///./src/Compiler/performer/Combiner/Combiner.js","webpack:///./src/Compiler/performer/Combiner/CombinerHost.js","webpack:///./src/Compiler/performer/Combiner/Grouper.js","webpack:///./src/Compiler/performer/Combiner/index.js","webpack:///./src/Compiler/performer/Expression/Expression.js","webpack:///./src/Compiler/performer/Expression/StaticExpression.js","webpack:///./src/Compiler/performer/Filter/Filter.js","webpack:///./src/Compiler/performer/Filter/FilterExpression.js","webpack:///./src/Compiler/performer/Filter/TagFilter.js","webpack:///./src/Compiler/performer/Filter/index.js","webpack:///./src/Compiler/performer/Function/Arguments.js","webpack:///./src/Compiler/performer/Function/FunctionAxis.js","webpack:///./src/Compiler/performer/Function/FunctionPerformer.js","webpack:///./src/Compiler/performer/Function/Last.js","webpack:///./src/Compiler/performer/Function/NodeListFunction.js","webpack:///./src/Compiler/performer/Function/Position.js","webpack:///./src/Compiler/performer/Function/containers/BoolFunctions.js","webpack:///./src/Compiler/performer/Function/containers/NodeFunctions.js","webpack:///./src/Compiler/performer/Function/containers/NodeListFunctions.js","webpack:///./src/Compiler/performer/Function/containers/NumberFunctions.js","webpack:///./src/Compiler/performer/Function/containers/StringFunctions.js","webpack:///./src/Compiler/performer/Function/index.js","webpack:///./src/Compiler/performer/NodeSetPerformer.js","webpack:///./src/Compiler/performer/Operator/AttributeOperator.js","webpack:///./src/Compiler/performer/Operator/DotOperator.js","webpack:///./src/Compiler/performer/Operator/PrioritizedOperator.js","webpack:///./src/Compiler/performer/Operator/containers/Comparators.js","webpack:///./src/Compiler/performer/Operator/containers/Maths.js","webpack:///./src/Compiler/performer/Operator/index.js","webpack:///./src/Compiler/performer/XpathNode.js","webpack:///./src/Compiler/tree/Xpath.ast.js","webpack:///./src/Compiler/type/BooleanType.js","webpack:///./src/Compiler/type/IntegerType.js","webpack:///./src/Compiler/type/NodeListType.js","webpack:///./src/Compiler/type/NodeSubSetListType.js","webpack:///./src/Compiler/type/NumberType.js","webpack:///./src/Compiler/type/StringType.js","webpack:///./src/Compiler/type/Type.js","webpack:///./src/Compiler/type/helper.js","webpack:///./src/DomAccess.js","webpack:///./src/Tokenizer/TokenStore.js","webpack:///./src/Tokenizer/XpathTokenizer.js","webpack:///./src/XDomPath.js","webpack:///./src/index.js"],"names":["VALUE","Symbol","INDEX","SNAPSHOT","RECORDING","RECORD_INDEX","StringStream","constructor","value","open","moveSnapshot","call","readNext","sub","START_INDEX","isSuccess","subLength","length","isSubCh","isCompleted","nextCh","next","i","moveBack","readNextWord","word","wordOpened","SPACE","move","read","isFollowing","substring","val","startRecording","stopRecording","isRecording","buildCurrentSnapshot","TOKENIZER","TREE","Compiler","tokenizer","XpathAST","compile","apply","RootAxis","tokens","getTokens","forEach","token","confBuilder","PerformerStore","get","type","upUntilFilter","StaticExpression","upUntilGroup","up","process","node","hasNext","push","STORE","save","performerFactory","axis","target","prop","descriptor","funcInst","Axis","args","Construct","func","types","argsCapacity","Clazz","FunctionPerformer","prioritizedOperator","PrioritizedOperator","NodeSetPerformer","getNodeSetList","nodeSet","reduce","resp","concat","context","getContext","funcAxis","FunctionAxis","append","attachShadow","tagFilter","TagFilter","Axes","_dec","_dec2","_dec3","_dec4","_dec5","_dec6","_dec7","_dec8","_dec9","_dec10","_dec11","_dec12","_dec13","_dec14","_dec15","_dec16","_dec17","_dec18","_dec19","_dec20","_dec21","_dec22","_dec23","_class","ancestor","getAncestors","ancestorOrSelf","child","DomAccess","getChildNodes","descendant","getDescendants","descendantOrSelf","following","getFollowings","followingSibling","getFollowingSiblings","parent","getParentOrHost","preceding","getPrecedings","precedingSibling","getPrecendingSiblings","_applyDecoratedDescriptor","prototype","Object","getOwnPropertyDescriptor","response","Set","add","list","chNode","childs","NodeListType","parse","Combiner","XpathNode","perform","nodeSetList","children","newNodeSetList","acc","childPerformer","CombinerHost","shadowRoot","Grouper","Expression","withBrackets","checkAndRemoveBrackets","brackets","capacity","firstCh","lastCh","Filter","filter","filterResp","FilterExpression","expressionValue","Number","isInteger","positionPerformer","Position","BooleanType","tagName","toLowerCase","Arguments","map","checkCreateShadow","arg","Infinity","Last","NodeListFunction","arg1","host","insideAxis","childNodes","indexOf","IntegerType","BoolFunctionContainer","not","a","NodeFunctions","StringType","string","textContent","classFunc","className","classList","contains","id","getAttribute","NodeListFunctions","shadow","nodes","ShadowRoot","text","nodeType","count","focusable","some","tag","NumberFunctions","NumberType","ceiling","numb","Math","ceil","floor","round","StringFunctions","str1","str2","includes","stringLength","str","from","size","substringBefore","ind","substringAfter","startsWith","endsWith","normalizeSpace","trim","replace","NodeSubSetListType","buildNodeSetList","AttributeOperator","attribute","undefined","DotOperator","nodeSubSetList","getNodeContent","priority","runArgs","ch","replaceWithParent","Comparators","equalize","b","more","less","moreOrEqual","lessOrEqual","Maths","CHILDREN","SHADOW_ROOT","PARENT","HOST","container","maxCapacity","getParentContext","replaceWith","remove","parentOfParent","delete","previousSibling","idx","lastChild","isShadow","ROOT","CURRENT","item","subsetList","subset","walk","handler","runRecursive","current","getParent","getChildren","upUntil","callback","upUntilHost","upToHost","walkComplete","currentAxis","currentFilter","toString","it","Type","isArgNodeSubsetList","Array","isArray","childNodesResp","Node","nodeList","String","v","getFollowingSibling","nextElementSibling","getPrecendingSibling","prev","previousElementSibling","parentElement","sibling","followings","fl","prevs","pr","parentNode","textCotent","innerHTML","rule","TYPES","sort","ta","tb","STREAM","STARTED","XpathTokenizer","xpathString","readToken","ready","tokenResp","bracketOpen","applyChar","prepareDynamicToken","hasType","char","trimmedValue","XDomPath","query","defineFunction"],"mappings":"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","file":"xdompath.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","export * from './src/StringStream';","const VALUE = Symbol();\r\nconst INDEX = Symbol();\r\nconst SNAPSHOT = Symbol();\r\nconst RECORDING = Symbol();\r\nconst RECORD_INDEX = Symbol();\r\n\r\nexport class StringStream {\r\n\r\n    constructor (value) {\r\n        this[VALUE] = value;\r\n    }\r\n\r\n    /**\r\n     * <div style='sfsf' name='dsaf'></div>\r\n     * <div style='sfsf' name='dsaf'>text</div>\r\n     * <div style='sfsf' name='dsaf'><child><sub>text</sub></child><span></span></div>\r\n     *\r\n     * @throws(StreamException)\r\n     * function readNode () {\r\n     *  var childs = [];\r\n     *  var tag = stream.readNext('<');\r\n     *  var tagName = stream.readNextWord();\r\n     *  stream.startRecording();\r\n     *  var endTag = stream.readNext('>');//todo check previous character to detect autoclose node: <node some='dd'/>, if autoclose -> just don't run while cycle\r\n     *  var nodeTemplate = stream.stopRecording();\r\n     *  while (true) {\r\n     *      stream.startRecording();\r\n         *  stream.readNext('<');\r\n         *  var textNode = stream.stopRecording();\r\n         *  if (textNode.trim().length > 0) {\r\n         *      childs.push({type: 'text', template: textNode});\r\n         *  }\r\n         *  if (stream.next() === '/') {\r\n         *      break;\r\n         *  } else {\r\n         *      stream.moveBack(2);\r\n         *      childs.push(readNode());\r\n         *  }\r\n     *  }\r\n     *  var resp = {tagName: tagName, template: nodeTemplate, children: childs};\r\n     *  return resp;\r\n     * }\r\n     *\r\n     * var nodes = [];\r\n     * while (!stream.isCompleted()) {\r\n     *  nodes.push(readNode());\r\n     * }\r\n     */\r\n\r\n    open () {\r\n        moveSnapshot.call(this, 0);\r\n    }\r\n\r\n    readNext (sub) {\r\n        const START_INDEX = this[INDEX];\r\n        var isSuccess = false;\r\n        var subLength = sub.length;\r\n        var isSubCh = subLength === 1;\r\n        while (!this.isCompleted()) {\r\n            let nextCh = this.next();\r\n            if (isSubCh) {\r\n                if (nextCh === sub) {\r\n                    isSuccess = true;\r\n                    break;\r\n                }\r\n            } else {\r\n                if (nextCh === sub[0]) {\r\n                    for (let i = 1; i < subLength; i++) {\r\n                        nextCh = this.next();\r\n                        if (nextCh !== sub[i]) {\r\n                            this.moveBack(i);\r\n                            break;\r\n                        }\r\n                        if (i === subLength - 1) {\r\n                            isSuccess = true;\r\n                        }\r\n                    }\r\n                    if (isSuccess) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (!isSuccess) {\r\n            this.moveBack(this[INDEX] - START_INDEX);\r\n        }\r\n        return isSuccess;\r\n    }\r\n\r\n    readNextWord () {\r\n        var word = \"\";\r\n        var wordOpened = false;\r\n        var SPACE = \" \";\r\n        while (!this.isCompleted()) {\r\n            let nextCh = this.next();\r\n            if (nextCh === SPACE && !wordOpened) {\r\n                wordOpened = true;\r\n            } else if (nextCh === SPACE && wordOpened) {\r\n                wordOpened = false;\r\n                break;\r\n            } else if (wordOpened) {\r\n                word += nextCh;\r\n            }\r\n        }\r\n        return word;\r\n    }\r\n\r\n    next () {\r\n        this.move(1);\r\n        return this.read();\r\n    }\r\n\r\n    read() {\r\n        return this[SNAPSHOT][0];\r\n    }\r\n\r\n    isFollowing(sub) {\r\n        return sub === this[SNAPSHOT].substring(0, sub.length);\r\n    }\r\n\r\n    isCompleted () {\r\n        return this[INDEX] > (this[VALUE].length - 1);\r\n    }\r\n\r\n    move (val) {\r\n        moveSnapshot.call(this, this[INDEX] + val);\r\n    }\r\n\r\n    moveBack (val) {\r\n        this.move(val * -1);\r\n    }\r\n\r\n    startRecording() {\r\n        this[RECORDING] = true;\r\n        this[RECORD_INDEX] = this[INDEX];\r\n    }\r\n\r\n    stopRecording() {\r\n        this[RECORDING] = false;\r\n        return this[VALUE].substring(this[RECORD_INDEX], this[INDEX] + 1);\r\n    }\r\n\r\n    isRecording() {\r\n        return this[RECORDING];\r\n    }\r\n\r\n}\r\n\r\nfunction buildCurrentSnapshot () {\r\n    this[SNAPSHOT] = this[VALUE].substring(this[INDEX]);\r\n}\r\n\r\nfunction moveSnapshot (value) {\r\n    this[INDEX] = value;\r\n    buildCurrentSnapshot.call(this);\r\n}","import { XpathAST } from \"./tree/Xpath.ast\";\nimport { StaticExpression } from \"./performer/Expression/StaticExpression\";\nimport { RootAxis } from \"./performer/Axis/RootNode\";\n\nimport \"./performer/Function\";\nimport \"./performer/Axis\";\nimport \"./performer/Operator\";\nimport \"./performer/Filter\";\nimport \"./performer/Combiner\";\nimport { PerformerStore } from \"./PerformerStore\";\n\n\nconst TOKENIZER = Symbol();\nconst TREE = Symbol();\n\nexport class Compiler {\n\n    constructor(tokenizer) {\n        this[TOKENIZER] = tokenizer;\n        this[TREE] = new XpathAST();\n    }\n\n    compile() {\n        this[TREE].apply(new RootAxis());\n        const tokens = getTokens.call(this);\n        tokens.forEach(token => {\n            const confBuilder = PerformerStore.get(token);\n            if (confBuilder) {\n                this[TREE].apply(confBuilder());\n                return;\n            }\n            switch(token.type) {\n                case \"filter\": {\n                    switch(token.value) {\n                        case \"filter-close\": {\n                            this[TREE].upUntilFilter();\n                            break;\n                        }\n                    }\n                    break;\n                }\n                case \"integer\": {\n                    this[TREE].apply(new StaticExpression(token));\n                    break;\n                }\n                case \"group\": {\n                    switch (token.value) {\n                        case \"close\": {\n                            this[TREE].upUntilGroup();\n                            break;\n                        }\n                    }\n                    break;\n                }\n                case \"string\": {\n                    this[TREE].apply(new StaticExpression(token));\n                    break;\n                }\n                case \"operator\": {\n                    switch (token.value) {\n                        case \"comma\": {\n                            this[TREE].up();\n                            break;\n                        }\n                    }\n                    break;\n                }\n            }\n        });\n        return this[TREE];\n    }\n\n    process(node) {\n        return this[TREE].process(node);\n    }\n\n}\n\nfunction getTokens() {\n    const tokens = [];\n    while(this[TOKENIZER].hasNext()) {\n        tokens.push(this[TOKENIZER].next());\n    }\n    return tokens;\n}","const STORE = {};\n\nexport class PerformerStore {\n\n    static save({ type, value }, performerFactory) {\n        STORE[`${type}:${value}`] = performerFactory;\n    }\n\n    static get({ type, value }) {\n        return STORE[`${type}:${value}`];\n    }\n\n}","import { Axis } from \"../performer/Axis/Axis\";\n\nexport function axis() {\n    return function (target, prop, descriptor) {\n        const funcInst = target[prop];\n        target[prop] = class extends Axis {\n\n            process(...args) {\n                return funcInst.call(this, ...args);\n            }\n\n        }\n    }\n}","import { PerformerStore } from \"../PerformerStore\";\n\nexport function compile({ type, value }) {\n    return function(target, prop) {\n        const Construct = prop ? target[prop] : target;\n        PerformerStore.save({type, value}, () => new Construct());\n    }\n}","import { FunctionPerformer } from \"../performer/Function/FunctionPerformer\";\n\nexport function func({ types, argsCapacity, type }={}) {\n    return function (target, prop, descriptor) {\n        const funcInst = target[prop];\n        let Clazz = FunctionPerformer;\n        if (type) {\n            Clazz = type;\n        }\n        target[prop] = class extends Clazz {\n\n            static get types() {\n                return types;\n            }\n\n            static get argsCapacity() {\n                return argsCapacity;\n            }\n\n            process(...args) {\n                return funcInst.call(this, ...args);\n            }\n\n        }\n    }\n}","import { PrioritizedOperator } from \"../performer/Operator/PrioritizedOperator\";\n\nexport function prioritizedOperator() {\n    return function (target, prop, descriptor) {\n        const funcInst = target[prop];\n        target[prop] = class extends PrioritizedOperator {\n\n            process(...args) {\n                return funcInst.call(this, ...args);\n            }\n\n        }\n    }\n}","import { NodeSetPerformer } from \"../NodeSetPerformer\";\nimport { FunctionPerformer } from \"../Function/FunctionPerformer\";\nimport { FunctionAxis } from \"../Function/FunctionAxis\";\nimport { StaticExpression } from \"../Expression/StaticExpression\";\nimport { TagFilter } from \"../Filter/TagFilter\";\n\nexport class Axis extends NodeSetPerformer {\n\n    getNodeSetList(nodeSet) {\n        return [...nodeSet].reduce((resp, node) => resp.concat(this.process(node, nodeSet) || []), []);\n    }\n\n    apply(node) {\n        const context = node.getContext();\n        if (node instanceof FunctionPerformer) {\n            const funcAxis = new FunctionAxis();\n            this.append(funcAxis);\n            funcAxis.attachShadow(node);\n            return context;\n        } else if (node instanceof StaticExpression) {\n            const tagFilter = new TagFilter();\n            this.apply(tagFilter);\n            tagFilter.attachShadow(node);\n            return context;\n        }\n        return super.apply(node);\n    }\n\n}","import { Axis } from \"./Axis\";\n\nexport class RootAxis extends Axis {\n\n    process(node) {\n        return [[node]];\n    }\n    \n}","import { axis } from \"../../../decorator/axis\";\nimport { DomAccess } from \"../../../../DomAccess\";\nimport { compile } from \"../../../decorator/compile\";\nimport { NodeListType } from \"../../../type/NodeListType\";\n\nexport class Axes {\n\n    @compile({ type: \"relation\", value: \"ancestor\" })\n    @axis()\n    ancestor(node) {\n        return getAncestors(node);\n    }\n\n    @compile({ type: \"relation\", value: \"ancestor-or-self\" })\n    @axis()\n    ancestorOrSelf(node) {\n        return [[node]].concat(getAncestors(node));\n    }\n\n    @compile({ type: \"path\", value: \"down\" })\n    @compile({ type: \"relation\", value: \"child\" })\n    @axis()\n    child(node) {\n        return [[...DomAccess.getChildNodes(node)]];\n    }\n    \n    @compile({ type: \"relation\", value: \"descendant\" })\n    @axis()\n    descendant(node) {\n        return getDescendants(node);\n    }\n\n    @compile({ type: \"path\", value: \"down-recursive\" })\n    @compile({ type: \"relation\", value: \"descendant-or-self\" })\n    @axis()\n    descendantOrSelf(node) {\n        return [[node]].concat(getDescendants(node));\n    }\n\n    @compile({ type: \"relation\", value: \"following\" })\n    @axis()\n    following(node) {\n        return [getFollowings(node)];\n    }\n\n    @compile({ type: \"relation\", value: \"following-sibling\" })\n    @axis()\n    followingSibling(node) {\n        return [DomAccess.getFollowingSiblings(node)];\n    }\n\n    @compile({ type: \"path\", value: \"parent\" })\n    @compile({ type: \"relation\", value: \"parent\" })\n    @axis()\n    parent(node) {\n        return [[DomAccess.getParentOrHost(node)]];\n    }\n\n    @compile({ type: \"relation\", value: \"preceding\" })\n    @axis()\n    preceding(node) {\n        return [getPrecedings(node)];\n    }\n\n    @compile({ type: \"relation\", value: \"preceding-sibling\" })\n    @axis()\n    precedingSibling(node) {\n        return [DomAccess.getPrecendingSiblings(node)];\n    }\n\n}\n\nfunction getAncestors(node) {\n    const response = new Set();\n    let context = node;\n    while(DomAccess.getParentOrHost(context)) {\n        let parent = DomAccess.getParentOrHost(context);\n        response.add(parent);\n        context = parent;\n    }\n    return [[...response]];\n}\n\nfunction getDescendants(node) {\n    let list = [];\n    const response = DomAccess.getChildNodes(node);\n    list.push(response);\n    if (response.length) {\n        response.forEach(chNode => {\n            list = list.concat(getDescendants(chNode));\n        });\n    }\n    return list;\n}\n\nfunction getFollowings(node) {\n    let response = DomAccess.getFollowingSiblings(node);\n    let childs = [];\n    response.forEach(node => {\n        childs = childs.concat(NodeListType.parse(getDescendants(node)));\n    });\n    response = response.concat(childs);\n    const parent = DomAccess.getParentOrHost(node);\n    if (parent) {\n        response = response.concat(getFollowings(parent));\n    }\n    return response;\n}\n\nfunction getPrecedings(node) {\n    let response = DomAccess.getPrecendingSiblings(node);\n    let childs = [];\n    response.forEach(node => {\n        childs = childs.concat(NodeListType.parse(getDescendants(node)));\n    });\n    response = response.concat(childs);\n    const parent = DomAccess.getParentOrHost(node);\n    if (parent) {\n        response.push(parent);\n        response = response.concat(getPrecedings(parent));\n    }\n    return response;\n}","export * from './containers/Axes';","import { XpathNode } from \"../XpathNode\";\n\nexport class Combiner extends XpathNode {\n\n    perform(nodeSetList) {\n        if (!this.children.length) {\n            return nodeSetList;\n        }\n        const newNodeSetList = [...this.children].reduce((acc, childPerformer) => {\n            return acc.concat(childPerformer.perform(nodeSetList));\n        }, []);\n        return this.process(newNodeSetList);\n    }\n\n}","import { XpathNode } from '../XpathNode';\nimport { Grouper } from './Grouper';\nimport { compile } from '../../decorator/compile';\n\n@compile({ type: \"group\", value: \"open\" })\nexport class CombinerHost extends XpathNode {\n\n    perform(nodeSetList) {\n        const newNodeSetList = this.shadowRoot.perform(nodeSetList);\n        if (!this.children.length) {\n            return newNodeSetList;\n        }\n        return [...this.children].reduce((acc, childPerformer) => {\n            return acc.concat(childPerformer.perform(newNodeSetList));\n        }, []);\n    }\n\n    getContext() {\n        this.attachShadow(new Grouper());//TODO support other combiner-s\n        return this.shadowRoot;\n    }\n\n}","import { Combiner } from \"./Combiner\";\n\nexport class Grouper extends Combiner {\n\n    process(nodeSetList) {\n        let response = new Set();\n        nodeSetList.forEach(nodeSet => nodeSet.forEach(node => response.add(node)));\n        return [[...response]];\n    }\n\n}","export * from \"./CombinerHost\";","import { XpathNode } from \"../XpathNode\";\nimport { PerformerStore } from \"../../PerformerStore\";\n\nexport class Expression extends XpathNode {\n\n    perform(...args) {\n        return this.children[0].perform(...args);//todo for now support only 1 item child\n    }\n\n    apply(node) {\n        if (node.type === \"static:string\" && !node.withBrackets) {\n            const context = super.apply(PerformerStore.get({ type: \"relation\", value: \"child\" })());\n            return context.apply(node);\n        }\n        return super.apply(node);\n    }\n\n}","import { Expression } from \"./Expression\";\n\nexport class StaticExpression extends Expression {\n\n    constructor(...args) {\n        super(...args);\n        this.val = checkAndRemoveBrackets(args[0].value);\n        this.withBrackets = !!args[0].brackets;\n    }\n\n    perform() {\n        return this.val;\n    }\n\n    static get capacity() {\n        return 0;\n    }\n\n    get type() {\n        return `static:${typeof this.val}`;//duck checking needed\n    }\n\n}\n\nfunction checkAndRemoveBrackets(value) {\n    if (typeof value !== \"string\") {\n        return value;\n    }\n    const firstCh = value[0];\n    const lastCh = value[value.length - 1];\n    if ((firstCh === lastCh) && ((lastCh === `'`) || (lastCh === `\"`))) {\n        return value.substring(1, value.length - 1);\n    }\n    return value;\n}","import { NodeSetPerformer } from \"../NodeSetPerformer\";\n\nexport class Filter extends NodeSetPerformer {\n\n    getNodeSetList(nodeSet) {\n        return [[...nodeSet].filter(node => {\n            const filterResp = this.process(node, nodeSet);\n\n            //TODO filterResp number/subset/string/etc...\n            return filterResp;\n        })];\n    }\n    \n}","import { Filter } from \"./Filter\";\nimport { Position } from \"../Function/Position\";\nimport { Expression } from \"../Expression/Expression\";\nimport { BooleanType } from \"../../type/BooleanType\";\nimport { compile } from \"../../decorator/compile\";\n\n@compile({ type: \"filter\", value: \"filter-open\" })\nexport class FilterExpression extends Filter {\n\n    process(...args) {\n        const expressionValue = this.shadowRoot.perform(...args);\n        if (Number.isInteger(expressionValue)) {\n            const positionPerformer = new Position();\n            positionPerformer.attachShadow();//making fake position node -> TODO reflect on tree structure instead!\n            return positionPerformer.perform(...args) === expressionValue;\n        } else {\n            return BooleanType.parse(expressionValue);\n        }\n    }\n\n    getContext() {\n        this.attachShadow(new Expression());\n        return this.shadowRoot;\n    }\n\n}","import { Filter } from \"./Filter\";\n\nexport class TagFilter extends Filter {\n\n    constructor() {\n        super();\n    }\n\n    process(node) {\n        return node.tagName && (node.tagName.toLowerCase() === this.shadowRoot.perform(node).toLowerCase());\n    }\n\n}","export * from \"./FilterExpression\";","import { Expression } from \"../Expression/Expression\";\n\nexport class Arguments extends Expression {\n\n    perform(...args) {\n        return this.children.map(child => child.perform(...args));\n    }\n\n}","import { XpathNode } from \"../XpathNode\";\n\nexport class FunctionAxis extends XpathNode {\n\n    perform(nodeSetList) {\n        const newNodeSetList = [];\n        nodeSetList.forEach(nodeSet => {\n            newNodeSetList.push(this.shadowRoot.perform(nodeSet));\n        });\n        if (!this.children.length) {\n            return newNodeSetList;\n        }\n        return [...this.children].reduce((acc, childPerformer) => {\n            return acc.concat(childPerformer.perform(newNodeSetList));\n        }, []);\n    }\n\n}","import { Arguments } from \"./Arguments\";\nimport { Expression } from \"../Expression/Expression\";\n\nexport class FunctionPerformer extends Expression {\n\n    constructor(...args) {\n        super(...args);\n    }\n\n    perform(node, nodeSet) {\n        checkCreateShadow.call(this);\n        this.node = node;\n        let args = this.shadowRoot.perform(node, nodeSet) || [];\n        const { types } = this.constructor;\n        if (types && types.length > 0) {\n            args = args.map((arg, i) => {\n                if (types[i]) {\n                    return types[i].parse(arg);\n                }\n                return arg;\n            });\n        }\n        return this.process(...args);\n    }\n\n    getContext() {\n        this.attachShadow(new Arguments());\n        this.shadowRoot.capacity = this.constructor.argsCapacity;\n        return this.shadowRoot;\n    }\n\n    static get argsCapacity() {\n        return Infinity;\n    }\n\n    static get types() {\n        return [];\n    }\n\n}\n\nfunction checkCreateShadow() {\n    if (!this.shadowRoot) {\n        this.attachShadow(new Arguments());\n    }\n}\n\n/**\n * \n * @compile({ token: \"contains-open\" })\n * @func({ argsSize: 2, types: [ StringType, StringType ] })\n * function contains(str1, str2) {\n *      return str1.includes(str2);\n * }\n * \n */","import { FunctionPerformer } from \"./FunctionPerformer\";\nimport { IntegerType } from \"../../type/IntegerType\";\nimport { compile } from \"../../decorator/compile\";\n\n@compile({ type: \"function\", value: \"last-open\" })\nexport class Last extends FunctionPerformer {\n\n    perform(node, nodeSet) {\n        return nodeSet.length;\n    }\n\n    static get argsCapacity() {\n        return 0;\n    }\n\n}","import { FunctionPerformer } from \"./FunctionPerformer\";\nimport { Axis } from \"../Axis/Axis\";\nimport { FunctionAxis } from \"./FunctionAxis\";\n\nexport class NodeListFunction extends FunctionPerformer {\n\n    perform(arg1) {\n        const parent = (this.parent || this.host);\n        const insideAxis = (parent instanceof Axis) || (parent instanceof FunctionAxis);\n        return this.process(insideAxis ? arg1 : [...arg1.childNodes]);\n    }\n\n}","import { FunctionPerformer } from \"./FunctionPerformer\";\nimport { IntegerType } from \"../../type/IntegerType\";\nimport { compile } from \"../../decorator/compile\";\n\n@compile({ type: \"function\", value: \"position-open\" })\nexport class Position extends FunctionPerformer {\n\n    perform(node, nodeSet) {\n        return node ? [...nodeSet].indexOf(node) + 1 : 1;\n    }\n\n    static get types() {\n        return [IntegerType];\n    }\n\n}","import { func } from \"../../../decorator/func\";\nimport { BooleanType } from \"../../../type/BooleanType\";\nimport { compile } from \"../../../decorator/compile\";\n\nexport class BoolFunctionContainer {\n\n    @compile({ type: \"function\", value: \"not-open\" })\n    @func({ types: [BooleanType], argsCapacity: 1 })\n    not(a) {\n        return !a;\n    }\n\n}","import { func } from \"../../../decorator/func\";\nimport { compile } from \"../../../decorator/compile\";\nimport { StringType } from \"../../../type/StringType\";\n\nexport class NodeFunctions {\n\n    @compile({ type: \"function\", value: \"string-open\" })\n    @func()\n    string() {\n        return this.node.textContent;\n    }\n\n    @compile({ type: \"function\", value: \"class-open\" })\n    @func({ types: [StringType], argsCapacity: 1 })\n    classFunc(className) {\n        return this.node.classList.contains(className);\n    }\n\n    @compile({ type: \"function\", value: \"id-open\" })\n    @func({ argsCapacity: 0 })\n    id() {\n        return this.node.getAttribute(\"id\");\n    }\n\n}","import { NodeListFunction } from \"../NodeListFunction\";\nimport { compile } from \"../../../decorator/compile\";\nimport { func } from \"../../../decorator/func\";\nimport { NodeListType } from \"../../../type/NodeListType\";\n\nexport class NodeListFunctions {\n\n    @compile({ type: \"function\", value: \"shadow-open\" })\n    @func({ type: NodeListFunction, types: [NodeListType] })\n    shadow(nodes) {\n        return nodes.filter(node => node instanceof ShadowRoot);\n    }\n\n    @compile({ type: \"function\", value: \"text-open\" })\n    @func({ type: NodeListFunction, types: [NodeListType] })\n    text(nodes) {\n        return nodes.filter(node => node.nodeType === 3);\n    }\n\n    @compile({ type: \"function\", value: \"count-open\" })\n    @func({ types: [NodeListType] })\n    count(nodes) {\n        return nodes.length;\n    }\n\n    @compile({ type: \"function\", value: \"focusable-open\" })\n    @func({ type: NodeListFunction, types: [NodeListType] })\n    focusable(nodes) {\n        const focusable = [\"input\", \"textarea\", \"select\", \"button\"]\n        return nodes.filter(node => {\n            return focusable.some(tag => node.tagName && node.tagName.toLowerCase() === tag);\n        });\n    }\n}","import { func } from \"../../../decorator/func\";\nimport { compile } from \"../../../decorator/compile\";\nimport { NumberType } from \"../../../type/NumberType\";\n\nexport class NumberFunctions {\n\n    @compile({ type: \"function\", value: \"ceiling-open\" })\n    @func({ types: [NumberType], argsCapacity: 1 })\n    ceiling(numb) {\n        return Math.ceil(numb);\n    }\n\n    @compile({ type: \"function\", value: \"floor-open\" })\n    @func({ types: [NumberType], argsCapacity: 1 })\n    floor(numb) {\n        return Math.floor(numb);\n    }\n\n    @compile({ type: \"function\", value: \"round-open\" })\n    @func({ types: [NumberType], argsCapacity: 1 })\n    round(numb) {\n        return Math.round(numb);\n    }\n\n}","import { func } from \"../../../decorator/func\";\nimport { compile } from \"../../../decorator/compile\";\nimport { StringType } from \"../../../type/StringType\";\nimport { IntegerType } from \"../../../type/IntegerType\";\n\nexport class StringFunctions {\n\n    @compile({ type: \"function\", value: \"contains-open\" })\n    @func({ types: [StringType, StringType], argsCapacity: 2 })\n    contains(str1, str2) {\n        if (!str1 || !str2) {\n            return false;\n        }\n        return str1.includes(str2);\n    }\n\n    @compile({ type: \"function\", value: \"string-length-open\" })\n    @func({ types: [StringType], argsCapacity: 1 })\n    stringLength(str) {\n        if (!str) {\n            return 0;\n        }\n        return str.length;\n    }\n\n    @compile({ type: \"function\", value: \"substring-open\" })\n    @func({ types: [StringType, IntegerType, IntegerType], argsCapacity: 3 })\n    substring(str, from, size) {\n        return str.substring(from + 1, size);\n    }\n\n    @compile({ type: \"function\", value: \"substring-before-open\" })\n    @func({ types: [StringType, StringType], argsCapacity: 2 })\n    substringBefore(from, sub) {\n        const ind = from.indexOf(sub);\n        if (ind === -1) {\n            return \"\";\n        }\n        return str.substring(0, ind);\n    }\n\n    @compile({ type: \"function\", value: \"substring-after-open\" })\n    @func({ types: [StringType, StringType], argsCapacity: 2 })\n    substringAfter(from, sub) {\n        const ind = from.indexOf(sub);\n        if (ind === -1) {\n            return \"\";\n        }\n        return str.substring(ind + from.length);\n    }\n\n    @compile({ type: \"function\", value: \"starts-with-open\" })\n    @func({ types: [StringType, StringType], argsCapacity: 2 })\n    startsWith(from, sub) {\n        return from.startsWith(sub);\n    }\n\n    @compile({ type: \"function\", value: \"ends-with-open\" })\n    @func({ types: [StringType, StringType], argsCapacity: 2 })\n    endsWith(from, sub) {\n        return from.endsWith(sub);\n    }\n\n    @compile({ type: \"function\", value: \"normalize-space-open\" })\n    @func({ types: [StringType, StringType], argsCapacity: 2 })\n    normalizeSpace(str) {\n        if  (!str) {\n            return \"\";\n        }\n        return str.trim().replace(/\\s+/g, ' ');\n    }\n\n    @compile({ type: \"function\", value: \"concat-open\" })\n    @func({ types: [StringType, StringType], argsCapacity: 2 })\n    concat(str1, str2) {\n        return str1.concat(str2);\n    }\n\n}","export * from './containers/StringFunctions';\nexport * from './containers/NodeFunctions';\nexport * from './containers/BoolFunctions';\nexport * from './containers/NodeListFunctions';\nexport * from './containers/NumberFunctions';\n\nexport * from './Position';\nexport * from './Last';","import { XpathNode } from \"./XpathNode\";\nimport { NodeSubSetListType } from \"../type/NodeSubSetListType\";\n\nexport class NodeSetPerformer extends XpathNode {\n\n    perform(arg) {\n        return NodeSubSetListType.parse(arg).reduce((resp, nodeSet) => {\n            return resp.concat(buildNodeSetList.call(this, nodeSet));\n        }, []);\n    }\n\n    /**\n     * \n     * @param {*} nodeSet \n     * @abstract\n     */\n    getNodeSetList(nodeSet) {\n\n    }\n\n}\n\nfunction buildNodeSetList(nodeSet) {\n    const newNodeSetList = this.getNodeSetList(nodeSet);\n    if (!this.children.length) {\n        return newNodeSetList;\n    }\n    return [...this.children].reduce((acc, childPerformer) => {\n        return acc.concat(childPerformer.perform(newNodeSetList));\n    }, []);\n}\n","import { Expression } from '../Expression/Expression';\nimport { compile } from '../../decorator/compile';\n\n@compile({ type: \"filter\", value: \"attribute\" })\nexport class AttributeOperator extends Expression {\n\n    perform(node) {\n        const attribute = this.shadowRoot.perform(node);\n        return node.getAttribute ? node.getAttribute(attribute) : undefined;\n    }\n\n    apply(node) {\n        if (!this.shadowRoot) {\n            this.attachShadow(node.getContext());\n            return this;\n        }\n        return super.apply(node);\n    }\n\n}","import { Expression } from \"../Expression/Expression\";\nimport { Axis } from \"../Axis/Axis\";\nimport { DomAccess } from \"../../../DomAccess\";\nimport { compile } from \"../../decorator/compile\";\nimport { NodeSubSetListType } from \"../../type/NodeSubSetListType\";\n\n@compile({ type: \"path\", value: \"current\" })\nexport class DotOperator extends Expression {\n\n    process(node) {\n        return [[node]];\n    }\n\n    perform(arg) {\n        const nodeSubSetList = NodeSubSetListType.parse(arg);\n        if (this.children.length > 0 && this.children[0] instanceof Axis) {\n            return Axis.prototype.perform.call(this, nodeSubSetList);\n        }\n        if (nodeSubSetList.length > 0 && nodeSubSetList[0].length > 0) {\n            return DomAccess.getNodeContent(nodeSubSetList[0][0]);\n        }\n        return \"\";\n    }\n\n    getNodeSetList(...args) {\n        return Axis.prototype.getNodeSetList.call(this, ...args);\n    }\n    \n}","import { Expression } from \"../Expression/Expression\";\n\nexport class PrioritizedOperator extends Expression {\n\n    static get priority() {\n        return 1;\n    }\n\n    static get capacity() {\n        return 2;\n    }\n\n    perform(...args) {\n        if (this.children.length !== this.constructor.capacity) {\n            return false;\n        }\n        const runArgs = this.children.map(ch => ch.perform(...args));\n        return this.process(...runArgs);\n    }\n\n    process() {\n        \n    }\n\n    apply(node) {\n        this.replaceWithParent();\n        super.apply(node);\n        return node;\n    }\n\n}","import { prioritizedOperator } from \"../../../decorator/prioritizedOperator\";\nimport { compile } from \"../../../decorator/compile\";\n\nexport class Comparators {\n\n    @compile({ type: \"operator\", value: \"equal\" })\n    @prioritizedOperator()\n    equalize(a, b) {\n        return a == b;\n    }\n\n    @compile({ type: \"operator\", value: \"more\" })\n    @prioritizedOperator()\n    more(a, b) {\n        return a > b;\n    }\n\n    @compile({ type: \"operator\", value: \"less\" })\n    @prioritizedOperator()\n    less(a, b) {\n        return a < b;\n    }\n\n    @compile({ type: \"operator\", value: \"more-or-equal\" })\n    @prioritizedOperator()\n    moreOrEqual(a, b) {\n        return a >= b;\n    }\n\n    @compile({ type: \"operator\", value: \"less-or-equal\" })\n    @prioritizedOperator()\n    lessOrEqual(a, b) {\n        return a <= b;\n    }\n\n}","import { compile } from \"../../../decorator/compile\";\nimport { prioritizedOperator } from \"../../../decorator/prioritizedOperator\";\n\nexport class Maths {\n\n    @compile({ type: \"operator\", value: \"plus\" })\n    @prioritizedOperator()\n    add(a, b) {\n        return a + b;\n    }\n\n}","export * from './containers/Comparators';\nexport * from './containers/Maths';\nexport * from './AttributeOperator';\nexport * from './DotOperator';","const CHILDREN = Symbol();\nconst SHADOW_ROOT = Symbol();\nconst PARENT = Symbol();\nconst HOST = Symbol();\n\nexport class XpathNode {\n\n    constructor() {\n        this[CHILDREN] = new Set();\n    }\n\n    static get capacity() {\n        return Infinity;\n    }\n\n    apply(node) {\n        const context = node.getContext();\n        let container = this;\n        const maxCapacity = this.constructor.capacity;\n        if (this[CHILDREN].size >= maxCapacity) {\n            container = this.parent || this.host;\n        }\n        if (!container) {\n            return null;\n        }\n        container.append(node);\n        return context;\n    }\n\n    getContext() {\n        return this;\n    }\n\n    getParentContext() {\n        return this.parent;\n    }\n\n    append(node) {\n        this[CHILDREN].add(node);\n        node[PARENT] = this;\n    }\n\n    attachShadow(node) {\n        this[SHADOW_ROOT] = node || new XpathNode();\n        this[SHADOW_ROOT][HOST] = this;\n    }\n\n    replaceWith(node) {\n        const parent = this[PARENT];\n        parent.remove(this);\n        parent.append(node);\n        node.append(this);\n    }\n\n    replaceWithParent() {\n        const parent = this[PARENT];\n        const parentOfParent = parent[PARENT];\n        parentOfParent.remove(parent);\n        parentOfParent.append(this);\n        this.append(parent);\n    }\n\n    remove(node) {\n        this[CHILDREN].delete(node);\n    }\n\n    get children() {\n        return [...this[CHILDREN]];\n    }\n\n    get parent() {\n        return this[PARENT];\n    }\n\n    get previousSibling() {\n        const idx = this.parent.children.indexOf(this);\n        if (idx === 0) {\n            return null;\n        }\n        this.parent.children[idx - 1];\n    }\n\n    get lastChild() {\n        const { children } = this.parent;\n        return children[children.length - 1];\n    }\n\n    get shadowRoot() {\n        return this[SHADOW_ROOT];\n    }\n\n    get host() {\n        return this[HOST];\n    }\n\n    get isShadow() {\n        return !!this.host;\n    }\n\n    /**\n     * @abstract\n     */\n    perform() {\n\n    }\n\n}","import { Axis } from \"../performer/Axis/Axis\";\nimport { Filter } from \"../performer/Filter/Filter\";\nimport { FunctionPerformer } from \"../performer/Function/FunctionPerformer\";\nimport { XpathNode } from \"../performer/XpathNode\";\nimport { FilterExpression } from \"../performer/Filter/FilterExpression\";\nimport { CombinerHost } from \"../performer/Combiner/CombinerHost\";\nimport { FunctionAxis } from \"../performer/Function/FunctionAxis\";\n\nconst ROOT = Symbol();\nconst CURRENT = Symbol();\nconst CHILDREN = Symbol();\nexport class XpathAST {\n\n    apply(item) {\n        if (!(item instanceof XpathNode)) {\n            return;\n        }\n        if (!this[ROOT]) {\n            this[ROOT] = item;\n            this[CURRENT] = item;\n            return;\n        }\n\n        this[CURRENT] = this[CURRENT].apply(item);\n    }\n\n    process(node) {\n        this[CURRENT] = this[ROOT];\n        let response = new Set();\n        const subsetList = this[ROOT].perform([[node]]);\n        subsetList.forEach(subset => {\n            subset.forEach(node => response.add(node));\n        });\n        return [...response];\n    }\n\n    walk(handler) {\n        if (!this[ROOT]) {\n            return;\n        }\n        runRecursive.call(this, this[ROOT], handler);\n    }\n\n    get current() {\n        return this[CURRENT];\n    }\n\n    set current(item) {\n        this[CURRENT] = item;\n    }\n\n    get parent() {\n        return this.getParent(this[CURRENT]);\n    }\n\n    get children() {\n        return this.getChildren(this[CURRENT]);\n    }\n\n    getChildren(item) {\n        return item[CHILDREN];\n    }\n\n    getParent(item) {\n        return item.parent;\n    }\n\n    up() {\n        this[CURRENT] = this.parent;\n    }\n\n    upUntil(callback) {\n        this.up();\n        if (callback(this[CURRENT])) {\n            return;\n        }\n        this.upUntil(callback);\n    }\n\n    upUntilHost() {\n        const upToHost = () => {\n            if (this.current.host) {\n                this.current = this.current.host;\n                return true;\n            }\n        }\n        const walkComplete = upToHost();\n        if (walkComplete) {\n            return;\n        }\n        this.upUntil(node => !!node.host);\n        upToHost();\n    }\n\n    upUntilGroup() {\n        this.upUntilHost();\n        if (this.current instanceof CombinerHost) {\n            return;\n        }\n        if (this.current instanceof FunctionPerformer) {\n            if (this.current.host instanceof FunctionAxis) {\n                this.upUntilHost();\n            }\n            return;\n        }\n        this.upUntilGroup();\n    }\n\n    upUntilFilter() {\n        this.upUntilHost();\n        if (this.current instanceof FilterExpression) {\n            return;\n        }\n        this.upUntilFilter();\n    }\n\n    get currentAxis() {\n        return this[CURRENT] instanceof Axis;\n    }\n\n    get currentFilter() {\n        return this[CURRENT] instanceof Filter;\n    }\n\n    toString() {\n        let resp = '';\n        this.walk(it => {\n            resp += ':item=' + (it === this[ROOT]) + it;\n        });\n        return resp;\n    }\n\n}\n\nfunction runRecursive(node, handler) {\n    handler(node);\n    if (node[CHILDREN]) {\n        [...node[CHILDREN]].forEach(item => {\n            runRecursive.call(this, item, handler);\n        });\n    }\n}","import { Type } from \"./Type\";\nimport { isArgNodeSubsetList } from \"./helper\";\nimport { NodeListType } from \"./NodeListType\";\n\nexport class BooleanType extends Type {\n\n    static parse(arg) {\n        if (typeof arg === \"boolean\") {\n            return arg;\n        }\n        if (isArgNodeSubsetList(arg)) {\n            return NodeListType.parse(arg).length > 0;\n        }\n        if (Array.isArray(arg)) {\n            return arg.length > 0;\n        }\n        return !!arg;\n    }\n\n}","import { Type } from \"./Type\";\n\nexport class IntegerType extends Type {\n\n    static parse(arg) {\n        return Number(arg);\n    }\n\n}","import { Type } from \"./Type\";\nimport { isArgNodeSubsetList } from \"./helper\";\n\nexport class NodeListType extends Type {\n\n    static parse(arg) {\n        if (isArgNodeSubsetList(arg)) {\n            const childNodesResp = new Set();\n            arg.forEach(list => {\n                if (Array.isArray(list)) {\n                    list.forEach(node => node && childNodesResp.add(node));\n                }\n            });\n            return [...childNodesResp];\n        }\n        if (Array.isArray(arg) && arg.length > 0 && arg[0] instanceof Node) {\n            return arg;\n        }\n        return [];\n    }\n\n}","import { Type } from \"./Type\";\nimport { isArgNodeSubsetList } from './helper';\n\nexport class NodeSubSetListType extends Type {\n\n    static parse(arg) {\n        if (isArgNodeSubsetList(arg)) {\n            return arg;\n        }\n        if (arg instanceof Node) {\n            return [[arg]];\n        }\n        return [arg];\n    }\n\n}","import { Type } from \"./Type\";\n\nexport class NumberType extends Type {\n\n    static parse(arg) {\n        return Number(arg);\n    }\n\n}","import { Type } from \"./Type\";\nimport { isArgNodeSubsetList } from \"./helper\";\nimport { NodeListType } from \"./NodeListType\";\n\nexport class StringType extends Type {\n\n    static parse(arg) {\n        if (isArgNodeSubsetList(arg)) {\n            return arg[0][0].textContent;\n        }\n        let nodeList = NodeListType.parse(arg);\n        if (nodeList && nodeList.length > 0) {\n            return nodeList[0].textContent;\n        }\n        return String(arg);\n    }\n\n}","export class Type {\n\n    static parse(v) {\n        return v;\n    }\n\n}","export function isArgNodeSubsetList(arg) {\n     return Array.isArray(arg) && arg.length > 0 && Array.isArray(arg[0]) && ((arg[0].length > 0 && arg[0][0] instanceof Node) || arg[0].length === 0);\n}","export class DomAccess {\n\n    static getChildNodes(node) {\n        const response = new Set();\n        if (node.shadowRoot) {\n            response.add(node.shadowRoot);\n        }\n        node.childNodes.forEach(chNode => response.add(chNode));\n        return [...response];\n    }\n\n    static getFollowingSibling(node) {\n        if (node instanceof ShadowRoot) {\n            return DomAccess.getParentOrHost(node).children[0];\n        }\n        return node.nextElementSibling;\n    }\n\n    static getPrecendingSibling(node) {\n        const prev = node.previousElementSibling;\n        if (prev) {\n            return prev;\n        }\n        if (node instanceof ShadowRoot) {\n            return null;\n        }\n        if (node.parentElement && node.parentElement.shadowRoot) {\n            return node.parentElement.shadowRoot;\n        }\n    }\n\n    static getFollowingSiblings(node) {\n        const sibling = DomAccess.getFollowingSibling(node);\n        const response = new Set();\n        if (sibling) {\n            response.add(sibling);\n            const followings = DomAccess.getFollowingSiblings(sibling);\n            if (followings && followings.length > 0) {\n                followings.forEach(fl => response.add(fl));\n            }\n        }\n        return [...response];\n    }\n\n    static getPrecendingSiblings(node) {\n        const sibling = DomAccess.getPrecendingSibling(node);\n        const response = new Set();\n        if (sibling) {\n            response.add(sibling);\n            const prevs = DomAccess.getPrecendingSiblings(sibling);\n            if (prevs && prevs.length > 0) {\n                prevs.forEach(pr => response.add(pr));\n            }\n        }\n        return [...response];\n    }\n\n    static getParentOrHost(node) {\n        return node.parentNode || node.host;\n    }\n\n    static getNodeContent(node) {\n        return node.nodeType === 3 ? node.textCotent : node.innerHTML;\n    }\n\n}","export const STORE = [\n    { type: \"path\", rule: '/', value: \"down\" },\n    { type: \"path\", rule: '//', value: \"down-recursive\" },\n    { type: \"path\", rule: '/..', value: \"parent\" },\n    { type: \"path\", rule: '.', value: \"current\" },\n    { type: \"path\", rule: '*', value: \"all-current\" },\n    { type: \"path\", rule: '|', value: \"union\" },\n\n    { type: \"relation\", rule: '/child::', value: \"child\" },\n    { type: \"relation\", rule: '/child-not-shadow::', value: \"child-not-shadow\" },\n    { type: \"relation\", rule: '/parent::', value: \"parent\" },\n    { type: \"relation\", rule: '/following-sibling::', value: \"following-sibling\" },\n    { type: \"relation\", rule: '/preceding-sibling::', value: \"preceding-sibling\" },\n    { type: \"relation\", rule: '/following::', value: \"following\" },\n    { type: \"relation\", rule: '/preceding::', value: \"preceding\" },\n    { type: \"relation\", rule: '/descendant::', value: \"descendant\" },\n    { type: \"relation\", rule: '/descendant-or-self::', value: \"descendant-or-self\" },\n    { type: \"relation\", rule: '/ancestor-or-self::', value: \"ancestor-or-self\" },\n    { type: \"relation\", rule: '/ancestor::', value: \"ancestor\" },\n    \n    { type: \"group\", rule: '(', value: \"open\" },\n    { type: \"group\", rule: ')', value: \"close\" },\n\n    { type: \"function\", rule: 'text(', value: 'text-open' },\n    { type: \"function\", rule: 'position(', value: 'position-open' },\n    { type: \"function\", rule: 'last(', value: 'last-open' },\n    { type: \"function\", rule: 'not(', value: 'not-open' },\n    { type: \"function\", rule: 'name(', value: 'name-open' },\n    { type: \"function\", rule: 'id(', value: 'id-open' },\n    { type: \"function\", rule: 'string(', value: 'string-open' },\n    { type: \"function\", rule: 'substring(', value: 'substring-open' },\n    { type: \"function\", rule: 'substring-after(', value: 'substring-after-open' },\n    { type: \"function\", rule: 'substring-before(', value: 'substring-before-open' },\n    { type: \"function\", rule: 'string-length(', value: 'string-length-open' },\n    { type: \"function\", rule: 'count(', value: 'count-open' },\n    { type: \"function\", rule: 'concat(', value: 'concat-open' },\n    { type: \"function\", rule: 'normalize-space(', value: 'normalize-space-open' },\n    { type: \"function\", rule: 'starts-with(', value: 'starts-with-open' },\n    { type: \"function\", rule: 'contains(', value: 'contains-open' },\n    { type: \"function\", rule: 'translate(', value: 'translate-open' },\n    { type: \"function\", rule: 'ceiling(', value: 'ceiling-open' },\n    { type: \"function\", rule: 'floor(', value: 'floor-open' },\n    { type: \"function\", rule: 'round(', value: 'round-open' },\n    { type: \"function\", rule: 'sum(', value: 'sum-open' },\n\n    { type: \"function\", rule: 'shadow(', value: 'shadow-open' },\n    { type: \"function\", rule: 'class(', value: 'class-open' },\n    { type: \"function\", rule: 'focusable(', value: \"focusable-open\" },\n   \n\n    { type: \"filter\", rule: '[', value: 'filter-open' },\n    { type: \"filter\", rule: ']', value: 'filter-close' },\n    { type: \"filter\", rule: '@', value: 'attribute' },\n\n    // { type: OPERATOR, rule: ' mod ', value: 'mod' },//???\n    { type: \"operator\", rule: '=', value: 'equal' },\n    { type: \"operator\", rule: '>', value: 'more' },\n    { type: \"operator\", rule: '<', value: 'less' },\n    { type: \"operator\", rule: '>=', value: 'more-or-equal' },\n    { type: \"operator\", rule: '<=', value: 'less-or-equal' },\n    { type: \"operator\", rule: '+', value: 'plus' },\n    { type: \"operator\", rule: '-', value: 'minus' },\n    { type: \"operator\", rule: ',', value: 'comma' }\n];","import { StringStream } from '@telenko/string-stream';\nimport { STORE } from './TokenStore';\n\nconst TYPES = STORE.sort((ta, tb) => {\n    if (ta.rule.length < tb.rule.length) {\n        return 1;\n    } else {\n        return -1;\n    }\n});\n\nconst STREAM = Symbol();\nconst STARTED = Symbol();\n\nexport class XpathTokenizer {\n\n    constructor(xpathString) {\n        this[STREAM] = new StringStream(xpathString);\n        this[STREAM].open();\n    }\n\n    hasNext() {\n        return !this[STREAM].isCompleted();\n    }\n\n    next() {\n        const token = readToken.call(this) || {};\n        return token.type;\n    }\n\n}\n\nfunction readToken(token) {\n    if (!token && this[STREAM].isCompleted()) {\n        return { type: { type: \"eof\", value: \"eof\" }, ready: true };\n    }\n    if (token && token.ready) {\n        return token;\n    }\n    let tokenResp;\n    if (token && token.bracketOpen) {\n        const value = this[STREAM].next();\n        if (value === token.bracketOpen) {\n            applyChar(token, value);\n            token.ready = true;\n            this[STREAM].next();//pointer next\n            return prepareDynamicToken(token);\n        }\n        this[STREAM].moveBack(1);\n    } else if (token && token.type.type === \"string\" && this[STREAM].isFollowing('-')) {\n        //nothing to do...\n    } else if (!this[STREAM].isCompleted()) {\n        TYPES.some(type => {\n            const hasType = this[STREAM].isFollowing(type.rule);\n            if (hasType) {\n                tokenResp = { type, ready: true };\n                this[STREAM].move(type.rule.length);\n            }\n            return hasType;\n        });\n    }\n\n    if (!tokenResp && token && !token.ready) {\n        if (this[STREAM].isCompleted()) {\n            return prepareDynamicToken(token);\n        }\n        applyChar(token, this[STREAM].next());\n        return readToken.call(this, token);\n    }\n\n    if (!tokenResp && !token) {\n        token = { type: { type: \"string\", value: '' }, ready: false };\n        applyChar(token, this[STREAM].read());\n        return readToken.call(this, token);\n    }\n\n    if (tokenResp && token && !token.ready) {\n        this[STREAM].moveBack(tokenResp.type.rule.length);\n        token.type.value = token.type.value.substring(0, token.type.value.length - 1);\n        token = prepareDynamicToken(token);\n        if (typeof token.type.value === \"string\" && !token.type.value.trim()) {\n            return readToken.call(this);\n        }\n        return token;\n    }\n\n    return tokenResp;\n}\n\nfunction applyChar(token, char) {\n    if (typeof char !== \"string\") {\n        return;\n    }\n    if (!token.type.value || !token.type.value.trim()) {\n        if (char === `\"` || char === `'`) {\n            token.bracketOpen = char;\n        }\n    }\n    token.type.value += char;\n}\n\nfunction prepareDynamicToken(token) {\n    token.ready = true;\n    const trimmedValue = token.type.value.trim();\n    if (trimmedValue !== \"\" && Number.isInteger(+trimmedValue)) {\n        token.type.value = +token.type.value;\n        token.type.type = \"integer\";\n    } else {\n        token.type.value = trimmedValue;\n        token.type.type = \"string\";\n        if (token.bracketOpen) {\n            token.type.brackets = true;\n        }\n    }\n    return token;\n}","import { XpathTokenizer } from './Tokenizer/XpathTokenizer';\nimport { Compiler } from './Compiler/Compiler';\n\nconst TREE = Symbol();\n/**\n * const xdompath = new XDomPath('.//div')\n * const foundItems = xdompath.perform(document.body);\n */\nexport class XDomPath {\n\n    constructor(query) {\n        const tokenizer = new XpathTokenizer(query);\n        this[TREE] = new Compiler(tokenizer).compile();\n    }\n\n    perform(node) {\n        return this[TREE].process(node);\n    }\n\n    static defineFunction() {\n        //TODO\n    }\n\n}","export * from './XDomPath';"],"sourceRoot":""}